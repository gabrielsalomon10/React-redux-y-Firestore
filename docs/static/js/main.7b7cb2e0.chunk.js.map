{"version":3,"sources":["components/types/types.js","components/reducers/uiReducer.js","components/reducers/notesReducer.js","store/store.js","components/reducers/AuthReducer.js","firebase/firebaseConfig.js","routers/PrivateRoute.js","routers/PublicRoute.js","hooks/useForm.js","action/ui.js","action/auth.js","components/auth/Login.js","components/auth/Register.js","routers/AuthRouters.js","components/lego/LegoEntry.js","components/lego/LegoEntries.js","components/lego/Sidebar.js","components/lego/LegoStock.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/lego/LegoScreen.js","helpers/loadNotes.js","action/notes.js","routers/AppRouters.js","NegocioApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","displayName","ui","note","map","id","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","catch","e","validator","isEmail","isStrongPassword","Swal","fire","logout","Login","useDispatch","useSelector","formValues","handleFacebookLogin","signInWithPopup","userCred","err","console","log","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","src","alt","style","fontSize","Register","password2","isFormValid","trim","length","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordEmail","AuthRouters","path","LegoEntry","date","descripcion","monto","noteDate","moment","format","LegoEntries","Sidebar","signOut","class","LegoStock","setDescripcion","edicionMode","setedicionMode","idLine","setIdLine","setMonto","lista","setLista","error","setError","useEffect","collection","get","docs","newArray","item","data","getList","setList","list","add","title","text","icon","deleteLine","doc","delete","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","updateLine","setUpdate","lineUpdated","set","key","NotesAppBar","NoteScreen","LegoScreen","loadNotes","notesSnap","forEach","snapHijo","push","startLoadingNotes","setNotes","AppRouters","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","Negocio","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b7cb2e0.chunk.js","sourcesContent":["\n\n\nexport const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load note',\n    notesUpdate: '[Notes] Updated note',\n    notesLogoutCleaning: '[Notes] Notes logout cleaning',\n\n}","\nimport { types } from '../types/types';\n\nconst initialState = {\n\n    loading: false,\n    msgError: null\n\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n    \n        default:\n            return initialState;\n    }\n\n}","\nimport { types } from '../types/types';\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n\n        case types.notesLoad:\n            return  {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n    \n        case types.notesUpdate:\n            return {\n                ...state,\n                note: state.note.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        default:\n            return initialState;\n        }\n        \n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../components/reducers/AuthReducer';\nimport { uiReducer } from '../components/reducers/uiReducer';\nimport { notesReducer } from '../components/reducers/notesReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers( applyMiddleware( thunk ) )\n     );","\nimport { types } from '../types/types';\n\n\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return{\n                uid: action.payload.uid,\n                displayName: action.payload.displayName\n            }\n\n        case types.logout:\n            return{}\n    \n        default:\n            return state;\n    }\n\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBJtkR4m8yo_21DWBoYBZh2kzkTHlc3dWg\",\n    authDomain: \"my-lego-54393.firebaseapp.com\",\n    projectId: \"my-lego-54393\",\n    storageBucket: \"my-lego-54393.appspot.com\",\n    messagingSenderId: \"578875571797\",\n    appId: \"1:578875571797:web:713482270bb330f6835edc\"\n};\n\n\n//Inicializacion de Firebase\nfirebase.initializeApp( firebaseConfig );\n\nconst db = firebase.firestore();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    facebookAuthProvider,\n    firebase\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                ? ( <Redirect to=\"/\" /> )\n                : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","\nimport { types } from '../components/types/types';\n\nexport const setError = ( err ) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = ( err ) => ({\n    type: types.uiRemoveError,\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading,\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading,\n});\n","import Swal from 'sweetalert2';\nimport validator from 'validator';\nimport { facebookAuthProvider, firebase, googleAuthProvider } from '../firebase/firebaseConfig';\nimport { types } from '../components/types/types';\nimport { finishLoading, startLoading } from './ui';\n\n\nexport const startLoginEmailPassword = ( email, password ) => {\n    return ( dispatch ) => {\n        dispatch( startLoading() );\n\n        firebase.auth().signInWithEmailAndPassword( email, password )\n            .then( ({ user }) => {\n                dispatch( login( user.uid, user.displayName ) );\n                dispatch(finishLoading());\n            })\n            .catch( e => {\n                dispatch(finishLoading());\n                if( !validator.isEmail( email ) ){\n                    Swal.fire('Error','El email es incorrecto', 'error');\n                } else if( !validator.isStrongPassword( password ) ) {\n                    Swal.fire('Error','La contraseña es incorrecta', 'error');\n                }\n            });\n    }\n}\n\nexport const startRegisterWithEmailPasswordEmail = ( name, email, password ) => {\n\n    return ( dispatch ) => {\n        firebase.auth().createUserWithEmailAndPassword( email, password )\n            .then( async({ user }) => {\n               await user.updateProfile({ displayName: name })\n                dispatch( login( user.uid, user.displayName ) );\n            })\n            .catch( e => {\n                console.log(e);\n            });\n    }\n\n}\n\n\nexport const startGoogleLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( googleAuthProvider )\n            .then( ({ user }) => {\n                dispatch( login( user.uid, user.displayName ) );\n            });\n    }\n}\n\nexport const startFacebookLogin = () => {\n    return ( dispatch ) => {\n\n        firebase.auth().signInWithPopup( facebookAuthProvider )\n            .then( userCred => {\n                dispatch( login( userCred.user ) );\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n}\n\nexport const login = ( uid, displayName ) => {\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n\n    }\n}\n\nexport const startLogout = () => {\n    return async( dispatch ) => {\n        await firebase.auth().signOut();\n\n        dispatch( logout() );\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n});","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startGoogleLogin, startLoginEmailPassword, startFacebookLogin } from '../../action/auth';\nimport { facebookAuthProvider } from '../../firebase/firebaseConfig';\n\n\nexport const Login = () => {\n\n    const dispatch = useDispatch();\n\n    const { loading } = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoginEmailPassword( email, password ) );\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    const handleFacebookLogin = () => {\n        dispatch( startFacebookLogin() );\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\" >Entrar</h3>\n\n            <form onSubmit={ handleLogin }>\n                <input \n                    type=\"text\" \n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__intput\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\" \n                    placeholder=\"Contraseña\"\n                    name=\"password\"\n                    className=\"auth__intput\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n                <button \n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Ingresar   \n                </button>\n\n                <hr />\n                    <div className=\"auth__social-networks\">\n                        <p>Ingresa con tu red social</p>\n                        <div \n                            className=\"google-btn\"\n                            onClick={ handleGoogleLogin }\n                        >\n                            <div className=\"google-icon-wrapper\">\n                                <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                            </div>\n                            <p className=\"btn-text\">\n                                <b >Inicia sesión con Google</b>\n                            </p>\n                        </div>\n\n                        <div \n                            className=\"google-btn\"\n                            onClick={ () => handleFacebookLogin( facebookAuthProvider ) }\n                        >\n                            <div className=\"facebook-icon-wrapper\">\n                                <img className=\"google-icon\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRfMTz-VzY1FLzOJSP9iJcxVNhJc7LwZ-MT7Q&usqp=CAU\" alt=\"google button\" />\n                            </div>\n                            <p className=\"btn-text\">\n                                <b style={{ fontSize: 12 }}>Inicia sesión con Facebook</b>\n                            </p>\n                        </div>\n                    </div>\n\n                    <Link \n                        to=\"/auth/register\"\n                        className=\"link\"\n                    >\n                        Crear nueva cuenta\n                    </Link>\n            </form>\n\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport validator from 'validator';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startRegisterWithEmailPasswordEmail } from '../../action/auth';\nimport Swal from 'sweetalert2';\n\n\nexport const Register = () => {\n\n    const dispatch = useDispatch();\n\n    const { msgError } = useSelector( state => state.ui );\n\n    const [ values, handleInputChange ] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name ,email ,password ,password2 } = values;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if( isFormValid() ) {\n            dispatch( startRegisterWithEmailPasswordEmail( name, email, password ) );\n        }\n\n        \n    }\n\n    const isFormValid = () => {\n\n        if( name.trim().length < 3 ) {\n\n            Swal.fire('Error','El campo debe contener 3 o mas caracteres','error');\n            return false;\n\n        } else if( !validator.isEmail( email ) ) {\n\n            Swal.fire('Error','El email no es válido','error');\n            return false;\n\n        } else if( password !== password2 || password.length < 6 || password2.length < 6 ) {\n            Swal.fire('Error','Las contraseñas deben tener mas de 6 caracteres y deben ser iguales','error');\n            return false;\n        }\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\" >Entrar</h3>\n\n            <form onSubmit={ handleRegister } >\n\n                {\n                    msgError &&\n                    (\n                    <div className=\"auth__alert-error\">\n                        { msgError } \n                    </div>\n                    )\n                }\n\n                <input \n                    type=\"name\" \n                    placeholder=\"Nombre\"\n                    name=\"name\"\n                    className=\"auth__intput\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"text\" \n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__intput\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\" \n                    placeholder=\"Contraseña\"\n                    name=\"password\"\n                    className=\"auth__intput\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type=\"password\" \n                    placeholder=\"Confirmar contraseña\"\n                    name=\"password2\"\n                    className=\"auth__intput\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button \n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    /* disabled={ true } */\n                >\n                    Registrarse   \n                </button>\n\n                <hr />\n\n                    <Link \n                        to=\"/auth/login\"\n                        className=\"link\"\n                    >\n                        Ya estás registrado?\n                    </Link>\n            </form>\n\n        </>\n    )\n}\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport { Login } from '../components/auth/Login';\nimport { Register } from '../components/auth/Register';\n\nexport const AuthRouters = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        path=\"/auth/login\"\n                        component={ Login }\n                        />\n\n                    <Route \n                        path=\"/auth/register\"\n                        component={ Register }\n                        />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\n\n\n\nexport const LegoEntry = ({ date, descripcion, monto  }) => {\n\n    const noteDate = moment(date);\n\n    return (\n        <div \n            className=\"lego__entry\"\n        >\n            <div \n                className=\"lego__entry-list\"\n            ></div>\n\n            <div className=\"lego__entry-body\">\n                <p className=\"lego__entry-title\">{ descripcion }</p>\n                <p className=\"lego__entry-content\">${ monto }</p>\n                <p className=\"lego__entry-content\">{ date }</p>\n            </div>\n            <div className=\"lego__entry-date\">\n                <span>{ noteDate.format('DD/MM/YYYY')}</span>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { LegoEntry } from './LegoEntry';\n\nexport const LegoEntries = () => {\n\n    /* const entries = [1,2,3,4,5,6,7,8,9,10]; */\n\n    const { notes } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"lego__entries\">\n            {\n                notes.map( note => (\n                    <LegoEntry\n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../action/auth';\nimport { LegoEntries } from './LegoEntries';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { displayName } = useSelector( state => state.auth )\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    \n     return (\n        <aside className=\"lego__sidebar\">\n            <div className=\"lego__sidebar-navbar mb-1\">\n                <h3>\n                    <i className=\"far fa-grin-alt fa-1x\"></i>\n                    <span> { displayName }</span>\n                </h3>\n\n            <button \n                className=\"btn\"\n                onClick={ handleLogout }\n            >\n                Salir\n            </button>\n            </div>\n\n            <div \n                className=\"lego__new-entry\"\n            >\n                <i class=\"fas fa-balance-scale fa-7x\"></i>\n                <p className=\"mt-1\">Ultimos añadidos</p>\n            </div>\n\n            <LegoEntries />\n\n        </aside>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { db } from '../../firebase/firebaseConfig';\nimport Swal from 'sweetalert2';\n\n\nexport const LegoStock = ( date ) => {\n\n    const [ descripcion, setDescripcion ] = useState('');\n    const [ edicionMode, setedicionMode ] = useState(null);\n    const [ idLine, setIdLine ] = useState('');\n    const [ monto, setMonto ] = useState('');\n    const [ lista, setLista ] = useState([]);\n    const [ error, setError ] = useState('');\n\n\n    useEffect( () => {\n        const getList = async() => {\n            const { docs } = await db.collection('list').get();\n            const newArray = docs.map( item => ({\n                id: item.id,\n                ...item.data()\n            }))        \n            setLista( newArray );\n        }\n        getList();\n    }, []);\n\n    const setList = async(e) => {\n        e.preventDefault();\n\n        if( descripcion === 0 ) {\n            setError(Swal.fire('Error', 'Debe completar el campo nombre', 'error'));\n            return\n        } \n        if( !monto.trim() ) {\n            return setError(Swal.fire('Error', 'Debe completar el campo monto', 'error'));\n        } \n\n        const list = {\n            descripcion: descripcion,\n            monto: monto,\n            noteDate\n        }\n\n        try {\n            const data = await db.collection('list').add( list );\n            const { docs } = await db.collection('list').get();\n            const newArray = docs.map( item => ({\n                id: item.id,\n                ...item.data()\n            }))        \n            setLista( newArray );\n        Swal.fire({\n            title: 'Añadido con éxito',\n            text: 'Guardado',\n            icon: 'info',\n        });\n        } catch (error) {\n            console.log(error)\n        }\n        setDescripcion('');\n        setMonto('');\n\n    }\n\n\n    const deleteLine = async( id ) => {\n\n        try {\n            await db.collection('list').doc( id ).delete();\n            const { docs } = await db.collection('list').get();\n            const newArray = docs.map( item => ({\n                id: item.id,\n                ...item.data()\n            }))        \n            setLista( newArray );\n            Swal.fire({\n                title: 'Estas seguro/a?',\n                text: \"Se perderá despues de esto\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Si, borrar'\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  Swal.fire(\n                    'Borrado!',\n                    'Has borrado tu archivo.',\n                    'success'\n                  )\n                }\n              });\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n\n    const updateLine = async( id ) => {\n\n        const idLine = await db.collection('list').doc(id).get();\n        const { descripcion, monto } = idLine.data();\n        setDescripcion( descripcion );\n        setMonto( monto );\n        /* setIdDescripcion( id ); */\n        setedicionMode(true);\n\n        try {\n            const { descripcion, monto } = idLine.data();\n            setDescripcion( descripcion );\n            setMonto( monto );\n            setIdLine( idLine.id );\n            setedicionMode(true);\n        } catch (error) {\n            console.log(error);\n        } \n\n\n    }\n\n\n    const setUpdate = async( e, id ) => {\n        e.preventDefault();\n        if( !descripcion.trim() ) {\n            setError('El campo descripcion esta vacio');\n        }\n\n        if( !monto.trim() ) {\n            setError('El campo monto esta vacio');\n        }\n\n        const lineUpdated = {\n            descripcion: descripcion,\n            monto: monto\n        }\n\n        try {\n            await db.collection('list').doc( idLine ).set( lineUpdated );\n            const { docs } = await db.collection('list').get();\n            const newArray = docs.map( item => ({\n                id: item.id,\n                ...item.data()\n            }))        \n            setLista( newArray );\n        } catch (error) {\n            console.log(error);\n        }\n\n        setDescripcion('');\n        setMonto('');\n        setIdLine('');\n        setedicionMode(false);\n\n    }\n\n    const noteDate = moment(date).format('DD/MM/YYYY');\n\n    return (\n        <>\n            <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-6\">\n                <h2>Descripcion</h2>\n                <form \n                    className=\"form-group\"\n                    onSubmit={ edicionMode ? setUpdate : setList }\n                >\n                    <input \n                        type=\"text\"\n                        value={ descripcion }\n                        className=\"form-control mt-3\" \n                        placeholder=\"Descripcion..\"\n                        onChange={ (e) => { setDescripcion( e.target.value )} }\n                    />\n\n                    <input \n                        type=\"text\"\n                        value={ monto }\n                        className=\"form-control mt-3\"\n                        placeholder=\"Monto\"\n                        onChange={ (e) => { setMonto( e.target.value ) } }\n                    />\n                    {\n                        edicionMode ?\n                        (\n                            <input type=\"submit\" value=\"Editar\" className=\"new\" />\n                        )\n                        :\n                        (\n                            <input type=\"submit\" value=\"Registrar\" className=\"new\" />\n                        ) \n                    }\n                    \n                </form>\n                {\n                    error ? \n                    (\n                        <div><p> { error } </p></div>\n                    )\n                    :\n                    (\n                        <span></span>\n                    )\n                }\n            </div>\n            <div className=\"col\">\n                <h2>Listado</h2>\n                {\n                    lista.length !== 0 ?\n                    (\n                        lista.map( item => (\n                            <li \n                                className=\"list-group-item m\" key={ item.key }> { item.descripcion } <br /> { item.monto} <br /> { noteDate }\n                                <button onClick={ ( id ) => { deleteLine( item.id ) }  } className=\"boton-delete\" >Eliminar</button>\n                                <button onClick={ ( id ) => { updateLine( item.id ) }  } className=\"boton-edit\" >Editar</button>\n                             </li>\n                        ))\n                    )\n                    :\n                    (\n                        <span>No hay registros aún</span>\n                    )\n                }\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nexport const NotesAppBar = () => {\n\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>Administracion</span>\n            <div>\n                <i class=\"fas fa-balance-scale-left\"></i>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { LegoStock } from '../lego/LegoStock';\nimport { NotesAppBar } from './NotesAppBar';\n\n\nexport const NoteScreen = () => {\n\n    \n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <LegoStock />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Sidebar } from './Sidebar'\nimport { NoteScreen } from '../notes/NoteScreen';\n\nexport const LegoScreen = () => {\n\n    return (\n        <div className=\"lego__main-content\">\n            <Sidebar />\n\n            <main>\n                <NoteScreen />\n\n                \n            </main>\n        </div>\n        \n    )\n}\n","import { db } from \"../firebase/firebaseConfig\"\n\n\n\nexport const loadNotes = async( uid ) => {\n\n    const notesSnap = await db.collection('list').get();\n    const notes = [];\n\n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id, \n            ...snapHijo.data()\n        });\n    });\n    return notes;\n}","/* import { db } from \"../firebase/firebaseConfig\";\n */import { types } from '../components/types/types';\nimport { loadNotes } from '../helpers/loadNotes';\n\n\n\n/* export const startNewNote = () => {\n\n    return async( dispatch, getState ) => {\n        const { uid } = getState().auth;\n        const nombre = document.getElementById('nombre').value;\n        const compra = document.getElementById('compra').value;\n        const venta = document.getElementById('venta').value;\n\n        const newNote = {\n            nombre: nombre,\n            compra: compra,\n            venta: venta,\n            date: new Date().getTime()\n        }\n\n        const docRef = await db.collection('list').add( newNote )\n            .then( docRef => console.log( 'Agregado', docRef))\n            .catch( err => console.log(err)); \n        dispatch( activeNote( newNote ) ); \n    }\n\n} */\n\n\nexport const activeNote = ( id, note ) => ({\n\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n\n});\n\n\nexport const startLoadingNotes = ( uid ) => {\n\n    return async(dispatch) => {\n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n    }\n\n}\n\n\nexport const setNotes = ( notes ) => ({\n\n    type: types.notesLoad,\n    payload: notes\n\n});\n\n\n/* export const startSaveNote = ( note ) => {\n    \n    return async( dispatch, getState ) => {\n        \n        const { uid } = getState().auth;\n        \n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n        console.log(note)        \n        await db.doc('list').update( noteToFirestore );\n    }\n    \n} */\n\n\nexport const refreshNote = ( id, note ) => ({\n\n    type: types.notesUpdate,\n    payload: {\n        id,\n        note\n    }\n\n});","import React, { useState, useEffect } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\n\nimport { firebase } from '../firebase/firebaseConfig';\nimport { useDispatch } from \"react-redux\";\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { AuthRouters } from './AuthRouters';\nimport { LegoScreen } from '../components/lego/LegoScreen';\nimport { login } from '../action/auth';\nimport { setNotes, startLoadingNotes } from '../action/notes';\nimport { loadNotes } from '../helpers/loadNotes';\n\n\nexport const AppRouters = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState( true );\n\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( async(user) => {\n            if( user?.uid ) {\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn( true );\n\n                const notes = await loadNotes( user.uid );\n                dispatch( setNotes( notes ) );\n\n                dispatch( startLoadingNotes( user.uid ) );\n\n            } else {\n                setIsLoggedIn( false );\n            }\n            setChecking( false );\n        });\n        \n    }, [ dispatch, setChecking, setIsLoggedIn ]);\n\n    if( checking ) {\n        <h1>Espere...</h1>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        isAuthenticated={ isLoggedIn }\n                        component={ AuthRouters }\n                    />\n\n                    <PrivateRoute \n                        path=\"/\"\n                        exact\n                        isAuthenticated={ isLoggedIn }\n                        component={ LegoScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouters } from './routers/AppRouters';\n\nexport const Negocio = () => {\n  return (\n    <div>\n      <Provider store={ store }>\n        <AppRouters />\n      </Provider>\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Negocio } from './NegocioApp';\nimport './styles/styles.scss';\nimport './styles/css/estilos.css';\n\nReactDOM.render(\n    <Negocio />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}